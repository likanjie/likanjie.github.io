(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{413:function(t,s,a){t.exports=a.p+"assets/img/20210713001.99509be7.png"},414:function(t,s,a){t.exports=a.p+"assets/img/20210713002.98ba6db4.png"},415:function(t,s,a){t.exports=a.p+"assets/img/20210713003.c236842e.png"},416:function(t,s,a){t.exports=a.p+"assets/img/20210713004.81fe3e73.png"},417:function(t,s,a){t.exports=a.p+"assets/img/20210713004-1.a00784aa.png"},418:function(t,s,a){t.exports=a.p+"assets/img/20210713005.f8372571.png"},419:function(t,s,a){t.exports=a.p+"assets/img/20210713006.ecbd81e4.png"},420:function(t,s,a){t.exports=a.p+"assets/img/20210713007.62c3f901.png"},421:function(t,s,a){t.exports=a.p+"assets/img/20210713008.52319c05.png"},422:function(t,s,a){t.exports=a.p+"assets/img/20210713009.df11ce27.png"},423:function(t,s,a){t.exports=a.p+"assets/img/20210713010.89fd3ab4.png"},424:function(t,s,a){t.exports=a.p+"assets/img/20210713011.e6e920bb.png"},425:function(t,s,a){t.exports=a.p+"assets/img/20210713012.9de28d64.png"},426:function(t,s,a){t.exports=a.p+"assets/img/20210713013.58cde3be.png"},427:function(t,s,a){t.exports=a.p+"assets/img/20210713014.922afc1e.png"},428:function(t,s,a){t.exports=a.p+"assets/img/20210713015.cc9bfba7.png"},429:function(t,s,a){t.exports=a.p+"assets/img/20210713016.d731580e.png"},430:function(t,s,a){t.exports=a.p+"assets/img/20210713017.f807622c.png"},431:function(t,s,a){t.exports=a.p+"assets/img/20210713018.9676809c.png"},432:function(t,s,a){t.exports=a.p+"assets/img/20210713019.81e7b735.png"},433:function(t,s,a){t.exports=a.p+"assets/img/20210713020.1fcbaba8.png"},434:function(t,s,a){t.exports=a.p+"assets/img/20210713021.98467366.png"},435:function(t,s,a){t.exports=a.p+"assets/img/20210713022.16951ca7.png"},436:function(t,s,a){t.exports=a.p+"assets/img/20210713023.9abca5d0.png"},437:function(t,s,a){t.exports=a.p+"assets/img/20210713024.af63847b.png"},438:function(t,s,a){t.exports=a.p+"assets/img/20210713025.c5f44ce7.png"},439:function(t,s,a){t.exports=a.p+"assets/img/20210713026.91c9fbef.png"},440:function(t,s,a){t.exports=a.p+"assets/img/20210713027.ebe15e45.png"},441:function(t,s,a){t.exports=a.p+"assets/img/20210713028.4ff43ec9.png"},442:function(t,s,a){t.exports=a.p+"assets/img/20210713029.c623b29b.png"},443:function(t,s,a){t.exports=a.p+"assets/img/20210713030.9bbc6425.png"},444:function(t,s,a){t.exports=a.p+"assets/img/20210713031.de947f56.png"},445:function(t,s,a){t.exports=a.p+"assets/img/20210713032.c8ccef8b.png"},446:function(t,s,a){t.exports=a.p+"assets/img/20210713033.07f1c1cb.png"},447:function(t,s,a){t.exports=a.p+"assets/img/20210713034.08333626.png"},448:function(t,s,a){t.exports=a.p+"assets/img/20210713035.1b4dd4ac.png"},449:function(t,s,a){t.exports=a.p+"assets/img/20210713036.5e779044.png"},450:function(t,s,a){t.exports=a.p+"assets/img/20210713037.ebda472a.png"},451:function(t,s,a){t.exports=a.p+"assets/img/20210713038.46246046.png"},452:function(t,s,a){t.exports=a.p+"assets/img/20210713039.61dd6ff5.png"},453:function(t,s,a){t.exports=a.p+"assets/img/20210713040.fd701f26.png"},454:function(t,s,a){t.exports=a.p+"assets/img/20210713041.33120011.png"},455:function(t,s,a){t.exports=a.p+"assets/img/20210713042.cc531528.png"},456:function(t,s,a){t.exports=a.p+"assets/img/20210713043.82a894d9.png"},457:function(t,s,a){t.exports=a.p+"assets/img/20210713044.206a5ef3.png"},662:function(t,s,a){"use strict";a.r(s);var n=a(26),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mybatis的sql执行流程分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的sql执行流程分析"}},[t._v("#")]),t._v(" MyBatis的SQL执行流程分析")]),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("MyBatis可能很多人都一直在用，但是MyBatis的SQL执行流程可能并不是所有人都清楚了，那么既然进来了，通读本文你将收获如下：")]),t._v(" "),n("p",[t._v("1、Mapper接口和映射文件是如何进行绑定的\n2、MyBatis中SQL语句的执行流程\n3、自定义MyBatis中的参数设置处理器typeHandler\n4、自定义MyBatis中结果集处理器typeHandler")]),t._v(" "),n("p",[t._v("PS：本文基于MyBatis3.5.5版本源码")]),t._v(" "),n("h2",{attrs:{id:"概要"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[t._v("#")]),t._v(" 概要")]),t._v(" "),n("p",[t._v("在MyBatis中，利用编程式进行数据查询，主要就是下面几行代码：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlSession")]),t._v(" session "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sqlSessionFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("openSession")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserMapper")]),t._v(" userMapper "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMapper")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserMapper")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LwUser")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" userList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" userMapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listUserByUserName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"孤狼1号"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("第一行是获取一个SqlSession对象，第二行就是获取UserMapper接口，第三行一行代码就实现了整个查询语句的流程，接下来我们就来仔细分析一下第二和第三步。")]),t._v(" "),n("h2",{attrs:{id:"获取mapper接口-getmapper"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取mapper接口-getmapper"}},[t._v("#")]),t._v(" 获取Mapper接口(getMapper)")]),t._v(" "),n("p",[t._v("第二步是通过SqlSession对象是获取一个Mapper接口，这个流程还是相对简单的，下面就是我们调用session.getMapper方法之后的运行时序图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(413),alt:"20210713001.png"}})]),t._v(" "),n("p",[t._v("1、在调用getMapper之后，会去Configuration对象中获取Mapper对象，因为在项目启动的时候就会把Mapper接口加载并解析存储到Configuration对象")]),t._v(" "),n("p",[n("img",{attrs:{src:a(414),alt:"20210713002.png"}})]),t._v(" "),n("p",[t._v("2、通过Configuration对象中的MapperRegistry对象属性，继续调用getMapper方法")]),t._v(" "),n("p",[n("img",{attrs:{src:a(415),alt:"20210713003.png"}})]),t._v(" "),n("p",[t._v("3、根据type类型，从MapperRegistry对象中的knownMappers获取到当前类型对应的代理工厂类，然后通过代理工厂类生成对应Mapper的代理类")]),t._v(" "),n("p",[n("img",{attrs:{src:a(416),alt:"20210713004.png"}})]),t._v(" "),n("p",[t._v("4、最终获取到我们接口对应的代理类MapperProxy对象")]),t._v(" "),n("p",[n("img",{attrs:{src:a(417),alt:"20210713004-1.png"}})]),t._v(" "),n("p",[t._v("而MapperProxy可以看到实现了InvocationHandler，使用的就是JDK动态代理。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(418),alt:"20210713005.png"}})]),t._v(" "),n("p",[t._v("至此获取Mapper流程结束了，那么就有一个问题了MapperRegistry对象内的HashMap属性knownMappers中的数据是什么时候存进去的呢？")]),t._v(" "),n("h2",{attrs:{id:"mapper接口和映射文件是何时关联的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mapper接口和映射文件是何时关联的"}},[t._v("#")]),t._v(" Mapper接口和映射文件是何时关联的")]),t._v(" "),n("p",[t._v("Mapper接口及其映射文件是在加载mybatis-config配置文件的时候存储进去的，下面就是时序图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(419),alt:"20210713006.png"}})]),t._v(" "),n("p",[t._v("1、首先我们会手动调用SqlSessionFactoryBuilder方法中的build()方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(420),alt:"20210713007.png"}})]),t._v(" "),n("p",[t._v("2、然后会构造一个XMLConfigBuilder对象，并调用其parse方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(421),alt:"图片"}})]),t._v(" "),n("p",[t._v("3、然后会继续调用自己的parseConfiguration来解析配置文件，这里面就会分别去解析全局配置文件的顶级节点，其他的我们先不看，我们直接看最后解析mappers节点")]),t._v(" "),n("p",[n("img",{attrs:{src:a(422),alt:"图片"}})]),t._v(" "),n("p",[t._v("4、继续调用自己的mapperElement来解析mappers文件（这个方法比较长，为了方便截图完整，所以把字体缩小了1号），可以看到，这里面分了四种方式来解析mappers节点的配置，对应了4种mapper配置方式，而其中红框内的两种方式是直接配置的xml映射文件，蓝框内的两种方式是解析直接配置Mapper接口的方式，从这里也可以说明，不论配置哪种方式，最终MyBatis都会将xml映射文件和Mapper接口进行关联。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(423),alt:"图片"}})]),t._v(" "),n("p",[t._v("5、我们先看第2种和第3中（直接配置xml映射文件的解析方式），会构建一个XMLMapperBuilder对象并调用其parse方法。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(424),alt:"图片"}})]),t._v(" "),n("p",[t._v("但是这里有一个问题，如果有多重继承或者多重依赖时在这里是可能会无法被完全解析的，比如说三个映射文件互相依赖，那么if里面(假设是最坏情况)只能加载1个，失败2个，然后走到下面if之外的代码又只能加载1个，还有1个会失败(如下代码中，只会处理1次，再次失败并不会继续加入incompleteResultMaps)：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(425),alt:"图片"}})]),t._v(" "),n("p",[t._v("当然，这个还是会被解析的，后面执行查询的时候会再次通过不断遍历去全部解析完毕，不过有一点需要注意的是，互相引用这种是会导致解析失败报错的，所以在开发过程中我们应该避免循环依赖的产生。\n6、解析完映射文件之后，调用自身方法bindMapperForNamespace，开始绑定Mapper接口和映射文件：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(426),alt:"图片"}})]),t._v(" "),n("p",[t._v("7、调用Configuration对象的addMapper")]),t._v(" "),n("p",[n("img",{attrs:{src:a(427),alt:"图片"}})]),t._v(" "),n("p",[t._v("8、调用Configuration对象的属性MapperRegistry内的addMapper方法，这个方法就是正式将Mapper接口添加到knownMappers，所以上面getMapper可以直接获取：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(428),alt:"图片"}})]),t._v(" "),n("p",[t._v("到这里我们就完成了Mapper接口和xml映射文件的绑定\n9、注意上面红框里面的代码，又调用了一次parse方法，这个parse方法主要是解析注解，比如下面的语句：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Select")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"select * from lw_user"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LwUser")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listAllUser")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("所以这个方法里面会去解析@Select等注解，需要注意的是，parse方法里面会同时再解析一次xml映射文件，因为上面我们提到了mappers节点有4种配置方式，其中两种配置的是Mapper接口，而配置Mapper接口会直接先调用addMapper接口，并没有解析映射文件，所以进入注解解析方法parse之中会需要再尝试解析一次XML映射文件。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(429),alt:"图片"}})]),t._v(" "),n("p",[t._v("解析完成之后，还会对Mapper接口中的方法进行解析，并将"),n("strong",[t._v("每个方法的全限定类名作为key")]),t._v("存入存入Configuration中的mappedStatements属性。")]),t._v(" "),n("p",[t._v("需要指出的是，这里存储的时候，同一个value会存储2次，"),n("strong",[t._v("一个全限定名作为key，另一个就是只用方法名(sql语句的id)来作为key：")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(430),alt:"图片"}})]),t._v(" "),n("p",[t._v("所以最终mappedStatements会是下面的情况：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(431),alt:"图片"}})]),t._v(" "),n("p",[t._v("事实上如果我们通过接口的方式来编程的话，最后来getStatement的时候，都是根据全限定名来取的，所以即使有重名对我们也没有影响，而之所以要这么做的原因其实还是为了兼容早期版本的用法，那就是不通过接口，而是直接通过方法名的方式来进行查询：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("session"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.lonelyWolf.mybatis.mapper.UserMapper.listAllUser"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("这里如果shortName没有重复的话，是可以直接通过简写来查询的：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("session"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"listAllUser"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("但是通过简写来查询一旦shortName重复了就会抛出以下异常：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(432),alt:"图片"}})]),t._v(" "),n("p",[t._v("这里的异常其实就是StrickMap的get方法抛出来的：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(433),alt:"图片"}})]),t._v(" "),n("h2",{attrs:{id:"sql执行流程分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sql执行流程分析"}},[t._v("#")]),t._v(" sql执行流程分析")]),t._v(" "),n("p",[t._v("上面我们讲到了，获取到的Mapper接口实际上被包装成为了代理对象，所以我们执行查询语句肯定是执行的代理对象方法，接下来我们就以Mapper接口的代理对象MapperProxy来分析一下查询流程。")]),t._v(" "),n("p",[t._v("整个sql执行流程可以分为两大步骤：")]),t._v(" "),n("p",[t._v("一、寻找sql\n二、执行sql语句")]),t._v(" "),n("h3",{attrs:{id:"寻找sql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#寻找sql"}},[t._v("#")]),t._v(" 寻找sql")]),t._v(" "),n("p",[t._v("首先还是来看一下寻找sql语句的时序图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(434),alt:"图片"}})]),t._v(" "),n("p",[t._v("1、了解代理模式的应该都知道，调用被代理对象的方法之后实际上执行的就是代理对象的invoke方法")]),t._v(" "),n("p",[n("img",{attrs:{src:a(435),alt:"图片"}})]),t._v(" "),n("p",[t._v("2、因为我们这里并没有调用Object类中的方法，所以肯定走的else。else中会继续调用MapperProxy内部类MapperMethodInvoker中的方法cachedInvoker，这里面会有一个判断，判断一下我们是不是default方法，因为Jdk1.8中接口中可以新增default方法，而default方法是并不是一个抽象方法，所以也需要特殊处理（刚开始会从缓存里面取，缓存相关知识我们这里先不讲，后面会单独写一篇来分析一下缓存)）。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(436),alt:"图片"}})]),t._v(" "),n("p",[t._v("3、接下来，是构造一个MapperMethod对象,这个对象封装了Mapper接口中对应的方法信息以及对应的sql语句信息：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(437),alt:"图片"}})]),t._v(" "),n("p",[t._v("这里面就会把要执行的sql语句，请求参数，方法返回值全部解析封装成MapperMethod对象，然后后面就可以开始准备执行sql语句了")]),t._v(" "),n("h2",{attrs:{id:"执行sql语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行sql语句"}},[t._v("#")]),t._v(" 执行sql语句")]),t._v(" "),n("p",[t._v("还是先来看一下执行Sql语句的时序图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(438),alt:"图片"}})]),t._v(" "),n("p",[t._v("1、我们继续上面的流程进入execute方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(439),alt:"图片"}})]),t._v(" "),n("p",[t._v("2、这里面会根据语句类型以及返回值类型来决定如何执行，本人这里返回的是一个集合，故而我们进入executeForMany方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(440),alt:"图片"}})]),t._v(" "),n("p",[t._v("3、这里面首先会将前面存好的参数进行一次转换，然后绕了这么一圈，回到了起点SqlSession对象，继续调用selectList方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(441),alt:"图片"}})]),t._v(" "),n("p",[t._v("3、接下来又讲流程委派给了Execute去执行query方法，最终又会去调用queryFromDatabase方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(442),alt:"图片"}})]),t._v(" "),n("p",[t._v("4、到这里之后，终于要进入正题了，一般带了这种do开头的方法就是真正做事的，Spring中很多地方也是采用的这种命名方式：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(443),alt:"图片"}})]),t._v(" "),n("p",[t._v("注意，前面我们的sql语句还是占位符的方式，并没有将参数设置进去，所以这里在return上面一行调用prepareStatement方法创建Statement对象的时候会去设置参数，替换占位符。参数如何设置我们先跳过，等把流程执行完了我们在单独分析参数映射和结果集映射。")]),t._v(" "),n("p",[t._v("5、继续进入PreparedStatementHandler对象的query方法，可以看到，这一步就是调用了jdbc操作对象PreparedStatement中的execute方法，最后一步就是转换结果集然后返回。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(444),alt:"图片"}})]),t._v(" "),n("p",[t._v("到这里，整个SQL语句执行流程分析就结束了，中途有一些参数的存储以及转换并没有深入进去，因为参数的转换并不是核心，只要清楚整个数据的流转流程，我们自己也可以有自己的实现方式，只要存起来最后我们能重新解析读出来就行。")]),t._v(" "),n("h2",{attrs:{id:"参数映射"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数映射"}},[t._v("#")]),t._v(" 参数映射")]),t._v(" "),n("p",[t._v("现在我们来看一下上面在执行查询之前参数是如何进行设置的，我们先进入prepareStatement方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(445),alt:"图片"}})]),t._v(" "),n("p",[t._v("我们发现，最终是调用了StatementHandler中的parameterize进行参数设置，接下来这里为了节省篇幅，我们不会一步步点进去，直接进入设置参数的方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(446),alt:"图片"}})]),t._v(" "),n("p",[t._v("上面的BaseTypeHandler是一个抽象类，setNonNullParameter并没有实现，都是交给子类去实现，而每一个子类就是对应了数据库的一种类型。下图中就是默认的一个子类StringTypeHandler，里面没什么其他逻辑，就是设置参数。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(447),alt:"图片"}})]),t._v(" "),n("p",[t._v("可以看到String里面调用了jdbc中的setString方法，而如果是int也会调用setInt方法。\n看到这些子类如果大家之前阅读过我前面讲的MyBatis参数配置，应该就很明显可以知道，这些子类就是系统默认提供的一些typeHandler。而这些默认的typeHandler会默认被注册并和Java对象进行绑定：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(448),alt:"图片"}})]),t._v(" "),n("p",[t._v("正是因为MyBatis中默认提供了常用数据类型的映射，所以我们写Sql的时候才可以省略参数映射关系，可以直接采用下面的方式，系统可以根据我们参数的类型，自动选择合适的typeHander进行映射：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("select user_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("user_name from lw_user where user_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("#"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("userName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("上面这条语句实际上和下面这条是等价的：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("select user_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("user_name from lw_user where user_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("#"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("userName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("jdbcType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("或者说我们可以直接指定typeHandler：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("select user_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("user_name from lw_user where user_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("#"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("userName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("jdbcType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("typeHandler"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ibatis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("IntegerTypeHandler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这里因为我们配置了typeHandler，所以会优先以配置的typeHandler为主不会再去读取默认的映射，如果类型不匹配就会直接报错了：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(449),alt:"图片"}})]),t._v(" "),n("p",[t._v("看到这里很多人应该就知道了，如果我们自己自定义一个typeHandler，然后就可以配置成我们自己的自定义类。\n所以接下来就让我们看看如何自定义一个typeHandler")]),t._v(" "),n("h2",{attrs:{id:"自定义typehandler"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义typehandler"}},[t._v("#")]),t._v(" 自定义typeHandler")]),t._v(" "),n("p",[t._v("自定义typeHandler需要实现BaseTypeHandler接口，BaseTypeHandler有4个方法，包括结果集映射，为了节省篇幅，代码没有写上来：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lonelyWolf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mybatis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("typeHandler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ibatis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseTypeHandler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ibatis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JdbcType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CallableStatement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PreparedStatement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResultSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyTypeHandler")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseTypeHandler")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNonNullParameter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PreparedStatement")]),t._v(" preparedStatement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JdbcType")]),t._v(" jdbcType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"自定义typeHandler生效了"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    preparedStatement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n")])])]),n("p",[t._v("然后我们改写一下上面的查询语句：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("select user_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("user_name from lw_user where user_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("#"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("userName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("jdbcType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("typeHandler"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lonelyWolf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mybatis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("typeHandler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("MyTypeHandler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("然后执行，可以看到，自定义的typeHandler生效了：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(450),alt:"图片"}})]),t._v(" "),n("h2",{attrs:{id:"结果集映射"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结果集映射"}},[t._v("#")]),t._v(" 结果集映射")]),t._v(" "),n("p",[t._v("接下来让我们看看结果集的映射，回到上面执行sql流程的最后一个方法：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("resultSetHandler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleResultSets")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("结果集映射里面的逻辑相对来说还是挺复杂的，因为要考虑到非常多的情况，这里我们就不会去深究每一个细节，直接进入到正式解析结果集的代码，下面的5个代码片段就是一个简单的但是完整的解析流程：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(451),alt:"图片"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(452),alt:"图片"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(453),alt:"图片"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(454),alt:"图片"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(455),alt:"图片"}})]),t._v(" "),n("p",[t._v("从上面的代码片段我们也可以看到，实际上解析结果集还是很复杂的，就如我们上一篇介绍的复杂查询一样，一个查询可以不断嵌套其他查询，还有延迟加载等等一些复杂的特性\n的处理，所以逻辑分支是有很多，但是不管怎么处理，最后的核心还是上面的一套流程，最终还是会调用typeHandler来获取查询到的结果。")]),t._v(" "),n("p",[t._v("是的，你没猜错，这个就是上面我们映射参数的typeHandler，因为typeHandler里面不只是一个设置参数方法，还有获取结果集方法(上面设置参数的时候省略了)。")]),t._v(" "),n("h2",{attrs:{id:"自定义typehandler结果集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义typehandler结果集"}},[t._v("#")]),t._v(" 自定义typeHandler结果集")]),t._v(" "),n("p",[t._v("所以说我们还是用上面那个MyTypeHandler 例子来重写一下取值方法(省略了设置参数方法)：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lonelyWolf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mybatis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("typeHandler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ibatis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseTypeHandler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ibatis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JdbcType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CallableStatement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PreparedStatement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResultSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyTypeHandler")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseTypeHandler")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 设置参数\n     */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNonNullParameter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PreparedStatement")]),t._v(" preparedStatement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JdbcType")]),t._v(" jdbcType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"设置参数->自定义typeHandler生效了"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        preparedStatement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 根据列名获取结果\n     */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNullableResult")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResultSet")]),t._v(" resultSet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" columnName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"根据columnName获取结果->自定义typeHandler生效了"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" resultSet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("columnName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 根据列的下标来获取结果\n     */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNullableResult")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResultSet")]),t._v(" resultSet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" columnIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"根据columnIndex获取结果->自定义typeHandler生效了"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" resultSet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("columnIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 处理存储过程的结果集\n     */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNullableResult")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CallableStatement")]),t._v(" callableStatement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" columnIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SQLException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" callableStatement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("columnIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("改写Mapper映射文件配置：")]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("resultMap")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("MyUserResultMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("lwUser"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("result")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("column")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("property")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("userId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("jdbcType")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("typeHandler")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.lonelyWolf.mybatis.typeHandler.MyTypeHandler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("result")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("column")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("property")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("userName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("jdbcType")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("VARCHAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("resultMap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("执行之后输出如下：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(456),alt:"图片"}})]),t._v(" "),n("p",[t._v("因为我们属性上面只配置了一个属性，所以只输出了一次。")]),t._v(" "),n("h2",{attrs:{id:"工作流程图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工作流程图"}},[t._v("#")]),t._v(" 工作流程图")]),t._v(" "),n("p",[t._v("上面介绍了代码的流转，可能绕来绕去有点晕，所以我们来画一个主要的对象之间流程图来更加清晰的展示一下MyBatis主要工作流程：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(457),alt:"图片"}})]),t._v(" "),n("p",[t._v("从上面的工作流程图上我们可以看到，SqlSession下面还有4大对象，这4大对象也很重要，后面学习拦截器的时候就是针对这4大对象进行的拦截，关于这4大对象的具体详情，我们下一篇文章再展开分析。")]),t._v(" "),n("p",[t._v("总结\n本文主要分析了MyBatis的SQL执行流程。在分析流程的过程中，我们也举例论证了如何自定义typeHandler来实现自定义的参数映射和结果集映射，不过MyBatis中提供的默认映射其实可以满足大部分的需求，如果我们对某些属性需要特殊处理，那么就可以采用自定义的typeHandle来实现，相信如果本文如果读懂了，以下几点大家应该至少会有一个清晰的认识：")]),t._v(" "),n("ul",[n("li",[t._v("Mapper接口和映射文件是如何进行绑定的")]),t._v(" "),n("li",[t._v("MyBatis中SQL语句的执行流程")]),t._v(" "),n("li",[t._v("自定义MyBatis中的参数设置处理器typeHandler")]),t._v(" "),n("li",[t._v("自定义MyBatis中结果集处理器typeHandler")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("来源")]),t._v(" "),n("p",[t._v("版权声明：本文为CSDN博主「双子孤狼」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/zwx900102/article/details/108455514")])])])}),[],!1,null,null,null);s.default=e.exports}}]);